Polycarpus and Tasks                    

httpscodeforcescomproblemsetproblem164E



3100

Polycarpus has many tasks Each task is characterized by three integers li ri and ti Three integers liriti mean that to perform task i one needs to choose an integer si lisisiti1ri then the task will be carried out continuously for ti units of time starting at time si and up to time siti1 inclusive In other words a task is performed for a continuous period of time lasting ti should be started no earlier than li and completed no later than riPolycarpuss tasks have a surprising property for any task jk with jk ljlk and rjrkLets suppose there is an ordered set of tasks A containing A tasks Well assume that ajljrjtj 1jA Also well assume that the tasks are ordered by increasing lj with the increase in numberLets consider the following recursive function f whose argument is an ordered set of tasks A and the result is an integer The function fA is defined by the greedy algorithm which is described below in a pseudolanguage of programming  Step 1  ans0  Step 2 We consider all tasks in the order of increasing of their numbers in the set A Lets define the current task counter i0  Step 3 Consider the next task ii1 If iA fulfilled then go to the 8 step  Step 4 If you can get the task done starting at time si  maxans1li then do the task i si  maxans1 li anssiti1  Go to the next task step 3  Step 5 Otherwise find such task  that first task ai can be done at time si  max and secondly the value of  is positive and takes the maximum value among all bk that satisfy the first condition If you can choose multiple tasks as bk choose the one with the maximum number in set A  Step 6 If you managed to choose task bk then   Go to the next task step 3  Step 7 If you didnt manage to choose task bk then skip task i Go to the next task step 3  Step 8 Return ans as a result of executing fA Polycarpus got entangled in all these formulas and definitions so he asked you to simulate the execution of the function f calculate the value of fA