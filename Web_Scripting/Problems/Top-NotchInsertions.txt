Top-Notch Insertions                    

https://codeforces.com/problemset/problem/1558/D

combinatorics

2600

Consider the insertion sort algorithm used to sort an integer sequence [a_1, a_2, \ldots, a_n] of length n in non-decreasing order.For each i in order from 2 to n, do the following. If a_i \ge a_{i-1}, do nothing and move on to the next value of i. Otherwise, find the smallest j such that a_i < a_j, shift the elements on positions from j to i-1 by one position to the right, and write down the initial value of a_i to position j. In this case we'll say that we performed an insertion of an element from position i to position j.It can be noticed that after processing any i, the prefix of the sequence [a_1, a_2, \ldots, a_i] is sorted in non-decreasing order, therefore, the algorithm indeed sorts any sequence.For example, sorting [4, 5, 3, 1, 3] proceeds as follows:   i = 2: a_2 \ge a_1, do nothing;  i = 3: j = 1, insert from position 3 to position 1: [3, 4, 5, 1, 3];  i = 4: j = 1, insert from position 4 to position 1: [1, 3, 4, 5, 3];  i = 5: j = 3, insert from position 5 to position 3: [1, 3, 3, 4, 5]. You are given an integer n and a list of m integer pairs (x_i, y_i). We are interested in sequences such that if you sort them using the above algorithm, exactly m insertions will be performed: first from position x_1 to position y_1, then from position x_2 to position y_2, ..., finally, from position x_m to position y_m.How many sequences of length n consisting of (not necessarily distinct) integers between 1 and n, inclusive, satisfy the above condition? Print this number modulo 998\,244\,353.