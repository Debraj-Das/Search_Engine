Poman Numbers                    

https://codeforces.com/problemset/problem/1411/E

bitmasks

2300

You've got a string S consisting of n lowercase English letters from your friend. It turned out that this is a number written in poman numerals. The poman numeral system is long forgotten. All that's left is the algorithm to transform number from poman numerals to the numeral system familiar to us. Characters of S are numbered from 1 to n from left to right. Let's denote the value of S as f(S), it is defined as follows:   If |S| > 1, an arbitrary integer m (1 \le m < |S|) is chosen, and it is defined that f(S) = -f(S[1, m]) + f(S[m + 1, |S|]), where S[l, r] denotes the substring of S from the l-th to the r-th position, inclusively.  Otherwise S = c, where c is some English letter. Then f(S) = 2^{pos(c)}, where pos(c) is the position of letter c in the alphabet (pos(a) = 0, pos(z) = 25). Note that m is chosen independently on each step.Your friend thinks it is possible to get f(S) = T by choosing the right m on every step. Is he right?