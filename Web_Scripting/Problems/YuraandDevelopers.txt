Yura and Developers                    

httpscodeforcescomproblemsetproblem549F

data structures

2800

Yura has a team of k developers and a list of n tasks numbered from 1 to n Yura is going to choose some tasks to be done this week Due to strange Looksery habits the numbers of chosen tasks should be a segment of consecutive integers containing no less than 2 numbers i e a sequence of form ll1r for some 1lrn Every task i has an integer number ai associated with it denoting how many manhours are required to complete the ith task Developers are not selfconfident at all and they are actually afraid of difficult tasks Knowing that Yura decided to pick up a hardest task the one that takes the biggest number of manhours to be completed among several hardest tasks with same difficulty level he chooses arbitrary one and complete it on his own So if tasks with numbers lr are chosen then the developers are left with rl tasks to be done by themselves Every developer can spend any integer amount of hours over any task but when they are done with the whole assignment there should be exactly ai manhours spent over the ith task The last but not the least problem with developers is that one gets angry if he works more than another developer A set of tasks lr is considered good if it is possible to find such a distribution of work that allows to complete all the tasks and to have every developer working for the same amount of time amount of work performed by Yura doesnt matter for other workers as well as for himFor example lets suppose that Yura have chosen tasks with following difficulties a1234 and he has three developers in his disposal He takes the hardest fourth task to finish by himself and the developers are left with tasks with difficulties 123 If the first one spends an hour on the first task and an hour on the third one the second developer spends two hours on the second task and the third developer spends two hours on the third task then they are done since every developer worked exactly for two hours and every task has been worked over for the required amount of time As another example if the first task required two hours instead of one to be completed then it would be impossible to assign the tasks in a way described above Besides work Yura is fond of problem solving He wonders how many pairs lr 1lrn exists such that a segment lr is good Yura has already solved this problem but he has no time to write the code Please help Yura and implement the solution for this problem 