Playing Piano                    

https://codeforces.com/problemset/problem/1032/C

constructive algorithms

1700

Little Paul wants to learn how to play piano. He already has a melody he wants to start with. For simplicity he represented this melody as a sequence a_1, a_2, \ldots, a_n of key numbers: the more a number is, the closer it is to the right end of the piano keyboard.Paul is very clever and knows that the essential thing is to properly assign fingers to notes he's going to play. If he chooses an inconvenient fingering, he will then waste a lot of time trying to learn how to play the melody by these fingers and he will probably not succeed.Let's denote the fingers of hand by numbers from 1 to 5. We call a fingering any sequence b_1, \ldots, b_n of fingers numbers. A fingering is convenient if for all 1\leq i \leq n - 1 the following holds:  if a_i < a_{i+1} then b_i < b_{i+1}, because otherwise Paul needs to take his hand off the keyboard to play the (i+1)-st note;  if a_i > a_{i+1} then b_i > b_{i+1}, because of the same;  if a_i = a_{i+1} then b_i\neq b_{i+1}, because using the same finger twice in a row is dumb. Please note that there is \neq, not = between b_i and b_{i+1}. Please provide any convenient fingering or find out that there is none.