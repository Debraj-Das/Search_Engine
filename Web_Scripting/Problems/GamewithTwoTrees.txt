Game with Two Trees                    

httpscodeforcescomproblemsetproblem207C3

data structures

2700

The Smart Beaver from ABBYY has come up with a new developing game for children The Beaver thinks that this game will help children to understand programming betterThe main object of the game is finite rooted trees each of their edges contains some lowercase English letter Vertices on any tree are always numbered sequentially from 1 to m where m is the number of vertices in the tree Before describing the actual game lets introduce some definitionsWell assume that the sequence of vertices with numbers v1 v2  vk k1 is a forward path if for any integer i from 1 to k1 vertex vi is a direct ancestor of vertex vi1 If we sequentially write out all letters from the the edges of the given path from v1 to vk we get some string k1 gives us an empty string Well say that such string corresponds to forward path v1 v2  vkWell assume that the sequence of tree vertices with numbers v1 v2  vk k1 is a backward path if for any integer i from 1 to k1 vertex vi is the direct descendant of vertex vi1 If we sequentially write out all the letters from the edges of the given path from v1 to vk we get some string k1 gives us an empty string Well say that such string corresponds to backward path v1 v2  vkNow lets describe the game that the Smart Beaver from ABBYY has come up with The game uses two rooted trees each of which initially consists of one vertex with number 1 The player is given some sequence of operations Each operation is characterized by three values t v c where   t is the number of the tree on which the operation is executed 1 or 2  v is the vertex index in this tree it is guaranteed that the tree contains a vertex with this index  c is a lowercase English letter The actual operation is as follows vertex v of tree t gets a new descendant with number m1 where m is the current number of vertices in tree t and there should be letter c put on the new edge from vertex v to vertex m1Well say that an ordered group of three integers i j q is a good combination if   1im1 where m1 is the number of vertices in the first tree  1jqm2 where m2 is the number of vertices in the second tree  there exists a forward path v1 v2  vk such that v1j and vkq in the second tree  the string that corresponds to the forward path in the second tree from vertex j to vertex q equals the string that corresponds to the backward path in the first tree from vertex i to vertex 1 note that both paths are determined uniquely Your task is to calculate the number of existing good combinations after each operation on the trees