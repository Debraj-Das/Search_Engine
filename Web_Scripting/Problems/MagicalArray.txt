Magical Array                    

https://codeforces.com/problemset/problem/1704/D

constructive algorithms

1900

Eric has an array b of length m, then he generates n additional arrays c_1, c_2, \dots, c_n, each of length m, from the array b, by the following way:Initially, c_i = b for every 1 \le i \le n. Eric secretly chooses an integer k (1 \le k \le n) and chooses c_k to be the special array.There are two operations that Eric can perform on an array c_t: Operation 1: Choose two integers i and j (2 \leq i < j \leq m-1), subtract 1 from both c_t[i] and c_t[j], and add 1 to both c_t[i-1] and c_t[j+1]. That operation can only be used on a non-special array, that is when t \neq k.; Operation 2: Choose two integers i and j (2 \leq i < j \leq m-2), subtract 1 from both c_t[i] and c_t[j], and add 1 to both c_t[i-1] and c_t[j+2]. That operation can only be used on a special array, that is when t = k.Note that Eric can't perform an operation if any element of the array will become less than 0 after that operation.Now, Eric does the following:  For every non-special array c_i (i \neq k), Eric uses only operation 1 on it at least once. For the special array c_k, Eric uses only operation 2 on it at least once.Lastly, Eric discards the array b.For given arrays c_1, c_2, \dots, c_n, your task is to find out the special array, i.e. the value k. Also, you need to find the number of times of operation 2 was used on it.