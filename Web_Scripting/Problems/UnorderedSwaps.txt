Unordered Swaps                    

https://codeforces.com/problemset/problem/1682/E

constructive algorithms

2700

Alice had a permutation p of numbers from 1 to n. Alice can swap a pair (x, y) which means swapping elements at positions x and y in p (i.e. swap p_x and p_y). Alice recently learned her first sorting algorithm, so she decided to sort her permutation in the minimum number of swaps possible. She wrote down all the swaps in the order in which she performed them to sort the permutation on a piece of paper. For example,  [(2, 3), (1, 3)] is a valid swap sequence by Alice for permutation p = [3, 1, 2] whereas [(1, 3), (2, 3)] is not because it doesn't sort the permutation. Note that we cannot sort the permutation in less than 2 swaps.  [(1, 2), (2, 3), (2, 4), (2, 3)] cannot be a sequence of swaps by Alice for p = [2, 1, 4, 3] even if it sorts the permutation because p can be sorted in 2 swaps, for example using the sequence [(4, 3), (1, 2)]. Unfortunately, Bob shuffled the sequence of swaps written by Alice.You are given Alice's permutation p and the swaps performed by Alice in arbitrary order. Can you restore the correct sequence of swaps that sorts the permutation p? Since Alice wrote correct swaps before Bob shuffled them up, it is guaranteed that there exists some order of swaps that sorts the permutation.