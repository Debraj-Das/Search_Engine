Willy-nilly, Crack, Into Release!                    

https://codeforces.com/problemset/problem/1819/F

data structures

3500

You have long dreamed of working in a large IT company and finally got a job there. You have studied all existing modern technologies for a long time and are ready to apply all your knowledge in practice. But then you sit down at your desk and see a sheet of paper with the company's motto printed in large letters: abcdabcdabcdabcd....The company's motto contains four main principles— a (Willi), b (Nilli), c (Crack), d (Release). Therefore, you consider strings of length n consisting of these four Latin letters. Unordered pairs of letters "ab", "bc", "cd", and "da" in this motto are adjacent, so we will call such pairs of symbols good. So, if you are given a string s of length n, and it is known that the unordered pair of symbols \{ x, y \} is good, then you can perform one of the following operations on the string:  if s_n = x, then you are allowed to replace this symbol with y,  if there exists 1 \le i < n such that s_i = x and s_{i+1} = \ldots = s_n = y, then you are allowed to replace the i-th symbol of the string with y, and all subsequent symbols with x. For example, the string bacdd can be replaced with one of the strings bacda, bacdc, or badcc, and the string aac can be replaced with aab or aad.A non-empty sequence of operations for the string s will be called correct if the following two conditions are met:  after performing all operations, the string becomes s again,  no string, except for s, will occur more than once during the operations. At the same time, the string s can occur exactly twice - before the start of the operations and after performing all operations. Now we are ready to move on to the problem statement! You have a set of strings that is initially empty. Then, each of q queries adds another string t_i to the set, or removes the string t_i from the set. After each query, you need to output the minimum and maximum size of a correct sequence of operations in which each word occurs at least once. The choice of the initial string s is up to you.