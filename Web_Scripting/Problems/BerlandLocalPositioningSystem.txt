Berland Local Positioning System                    

httpscodeforcescomproblemsetproblem534E

constructive algorithms

2400

In Berland a bus travels along the main street of the capital The street begins from the main square and looks like a very long segment There are n bus stops located along the street the ith of them is located at the distance ai from the central square all distances are distinct the stops are numbered in the order of increasing distance from the square that is aiai1 for all i from 1 to n1 The bus starts its journey from the first stop it passes stops 2 3 and so on It reaches the stop number n turns around and goes in the opposite direction to stop 1 passing all the intermediate stops in the reverse order After that it again starts to move towards stop n During the day the bus runs nonstop on this routeThe bus is equipped with the Berland local positioning system When the bus passes a stop the system notes down its numberOne of the key features of the system is that it can respond to the queries about the distance covered by the bus for the parts of its path between some pair of stops A special module of the system takes the input with the information about a set of stops on a segment of the path a stop number occurs in the set as many times as the bus drove past it This module returns the length of the traveled segment of the path or 1 if it is impossible to determine the length uniquely The operation of the module is complicated by the fact that stop numbers occur in the request not in the order they were visited but in the nondecreasing orderFor example if the number of stops is 6 and the part of the bus path starts at the bus stop number 5 ends at the stop number 3 and passes the stops as follows  then the request about this segment of the path will have form 34556 If the bus on the segment of the path from stop 5 to stop 3 has time to drive past the 1th stop ie if we consider a segment that ends with the second visit to stop 3 on the way from 5 then the request will have form 122334556You will have to repeat the Berland programmers achievement and implement this function