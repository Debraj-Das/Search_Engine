Stack Sorting                    

httpscodeforcescomproblemsetproblem911E

constructive algorithms

2000

Lets suppose you have an array a a stack s initially empty and an array b also initially emptyYou may perform the following operations until both a and s are empty  Take the first element of a push it into s and remove it from a if a is not empty  Take the top element from s append it to the end of array b and remove it from s if s is not empty You can perform these operations in arbitrary orderIf there exists a way to perform the operations such that array b is sorted in nondescending order in the end then array a is called stacksortableFor example 312 is stacksortable because b will be sorted if we perform the following operations  Remove 3 from a and push it into s  Remove 1 from a and push it into s  Remove 1 from s and append it to the end of b  Remove 2 from a and push it into s  Remove 2 from s and append it to the end of b  Remove 3 from s and append it to the end of b After all these operations b123 so 312 is stacksortable 231 is not stacksortableYou are given k first elements of some permutation p of size n recall that a permutation of size n is an array of size n where each integer from 1 to n occurs exactly once You have to restore the remaining nk elements of this permutation so it is stacksortable If there are multiple answers choose the answer such that p is lexicographically maximal an array q is lexicographically greater than an array p iff there exists some integer k such that for every ik qipi and qkpk You may not swap or change any of first k elements of the permutationPrint the lexicographically maximal permutation p you can obtainIf there exists no answer then output 1