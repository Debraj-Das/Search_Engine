Manhattan Subarrays                    

https://codeforces.com/problemset/problem/1550/C

brute force

1700

Suppose you have two points p = (x_p, y_p) and q = (x_q, y_q). Let's denote the Manhattan distance between them as d(p, q) = |x_p - x_q| + |y_p - y_q|.Let's say that three points p, q, r form a bad triple if d(p, r) = d(p, q) + d(q, r).Let's say that an array b_1, b_2, \dots, b_m is good if it is impossible to choose three distinct indices i, j, k such that the points (b_i, i), (b_j, j) and (b_k, k) form a bad triple.You are given an array a_1, a_2, \dots, a_n. Calculate the number of good subarrays of a. A subarray of the array a is the array a_l, a_{l + 1}, \dots, a_r for some 1 \le l \le r \le n.Note that, according to the definition, subarrays of length 1 and 2 are good.