WeirdSort                    

https://codeforces.com/problemset/problem/1311/B

dfs and similar

1200

You are given an array a of length n.You are also given a set of distinct positions p_1, p_2, \dots, p_m, where 1 \le p_i < n. The position p_i means that you can swap elements a[p_i] and a[p_i + 1]. You can apply this operation any number of times for each of the given positions.Your task is to determine if it is possible to sort the initial array in non-decreasing order (a_1 \le a_2 \le \dots \le a_n) using only allowed swaps.For example, if a = [3, 2, 1] and p = [1, 2], then we can first swap elements a[2] and a[3] (because position 2 is contained in the given set p). We get the array a = [3, 1, 2]. Then we swap a[1] and a[2] (position 1 is also contained in p). We get the array a = [1, 3, 2]. Finally, we swap a[2] and a[3] again and get the array a = [1, 2, 3], sorted in non-decreasing order.You can see that if a = [4, 1, 2, 3] and p = [3, 2] then you cannot sort the array.You have to answer t independent test cases.