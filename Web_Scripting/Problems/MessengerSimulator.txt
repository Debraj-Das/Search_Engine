Messenger Simulator                    

https://codeforces.com/problemset/problem/1288/E

data structures

2000

Polycarp is a frequent user of the very popular messenger. He's chatting with his friends all the time. He has n friends, numbered from 1 to n.Recall that a permutation of size n is an array of size n such that each integer from 1 to n occurs exactly once in this array.So his recent chat list can be represented with a permutation p of size n. p_1 is the most recent friend Polycarp talked to, p_2 is the second most recent and so on.Initially, Polycarp's recent chat list p looks like 1, 2, \dots, n (in other words, it is an identity permutation).After that he receives m messages, the j-th message comes from the friend a_j. And that causes friend a_j to move to the first position in a permutation, shifting everyone between the first position and the current position of a_j by 1. Note that if the friend a_j is in the first position already then nothing happens.For example, let the recent chat list be p = [4, 1, 5, 3, 2]:   if he gets messaged by friend 3, then p becomes [3, 4, 1, 5, 2];  if he gets messaged by friend 4, then p doesn't change [4, 1, 5, 3, 2];  if he gets messaged by friend 2, then p becomes [2, 4, 1, 5, 3]. For each friend consider all position he has been at in the beginning and after receiving each message. Polycarp wants to know what were the minimum and the maximum positions.