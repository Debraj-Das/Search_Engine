Fixed Point Guessing                    

https://codeforces.com/problemset/problem/1698/D

binary search

1600

This is an interactive problem.Initially, there is an array a = [1, 2, \ldots, n], where n is an odd positive integer. The jury has selected \frac{n-1}{2} disjoint pairs of elements, and then the elements in those pairs are swapped. For example, if a=[1,2,3,4,5], and the pairs 1 \leftrightarrow 4 and 3 \leftrightarrow 5 are swapped, then the resulting array is [4, 2, 5, 1, 3]. As a result of these swaps, exactly one element will not change position. You need to find this element.To do this, you can ask several queries. In each query, you can pick two integers l and r (1 \leq l \leq r \leq n). In return, you will be given the elements of the subarray [a_l, a_{l + 1}, \dots, a_r] sorted in increasing order. Find the element which did not change position. You can make at most \mathbf{15} queries.The array a is fixed before the interaction and does not change after your queries.Recall that an array b is a subarray of the array a if b can be obtained from a by deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.