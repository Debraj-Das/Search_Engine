Least Prefix Sum                    

https://codeforces.com/problemset/problem/1779/C

data structures

1600

Baltic, a famous chess player who is also a mathematician, has an array a_1,a_2, \ldots, a_n, and he can perform the following operation several (possibly 0) times:  Choose some index i (1 \leq i \leq n);  multiply a_i with -1, that is, set a_i := -a_i. Baltic's favorite number is m, and he wants a_1 + a_2 + \cdots + a_m to be the smallest of all non-empty prefix sums. More formally, for each k = 1,2,\ldots, n it should hold that a_1 + a_2 + \cdots + a_k \geq a_1 + a_2 + \cdots + a_m.Please note that multiple smallest prefix sums may exist and that it is only required that a_1 + a_2 + \cdots + a_m is one of them.Help Baltic find the minimum number of operations required to make a_1 + a_2 + \cdots + a_m the least of all prefix sums. It can be shown that a valid sequence of operations always exists.