GCD Master (hard version)                    

https://codeforces.com/problemset/problem/1806/F2

greedy

2900

This is the hard version of the problem. The only difference between the two versions is the constraint on m. You can make hacks only if both versions of the problem are solved.You are given an array a of length n and two integers m and k. Each element in a satisfies 1\le a_i \le m.In one operation, you choose two indices i and j such that 1 \le i < j \le |a|, then append \gcd(a_i,a_j) to the back of the array and delete a_i and a_j from the array. Note that the length of the array decreases by one after this operation.Find the maximum possible sum of the array after performing exactly k operations.