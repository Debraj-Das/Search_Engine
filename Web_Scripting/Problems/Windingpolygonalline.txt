Winding polygonal line                    

https://codeforces.com/problemset/problem/1158/D

constructive algorithms

2600

Vasya has n different points A_1, A_2, \ldots A_n on the plane. No three of them lie on the same line He wants to place them in some order A_{p_1}, A_{p_2}, \ldots, A_{p_n}, where p_1, p_2, \ldots, p_n — some permutation of integers from 1 to n.After doing so, he will draw oriented polygonal line on these points, drawing oriented segments from each point to the next in the chosen order. So, for all 1 \leq i \leq n-1 he will draw oriented segment from point A_{p_i} to point A_{p_{i+1}}. He wants to make this polygonal line satisfying 2 conditions:   it will be non-self-intersecting, so any 2 segments which are not neighbors don't have common points.  it will be winding. Vasya has a string s, consisting of (n-2) symbols "L" or "R". Let's call an oriented polygonal line winding, if its i-th turn left, if s_i =  "L" and right, if s_i =  "R". More formally: i-th turn will be in point A_{p_{i+1}}, where oriented segment from point A_{p_i} to point A_{p_{i+1}} changes to oriented segment from point A_{p_{i+1}} to point A_{p_{i+2}}. Let's define vectors \overrightarrow{v_1} = \overrightarrow{A_{p_i} A_{p_{i+1}}} and \overrightarrow{v_2} = \overrightarrow{A_{p_{i+1}} A_{p_{i+2}}}. Then if in order to rotate the vector \overrightarrow{v_1} by the smallest possible angle, so that its direction coincides with the direction of the vector \overrightarrow{v_2} we need to make a turn counterclockwise, then we say that i-th turn is to the left, and otherwise to the right. For better understanding look at this pictures with some examples of turns:  There are left turns on this picture   There are right turns on this picture You are given coordinates of the points A_1, A_2, \ldots A_n on the plane and string s. Find a permutation p_1, p_2, \ldots, p_n of the integers from 1 to n, such that the polygonal line, drawn by Vasya satisfy two necessary conditions.