Permutation Shift                    

https://codeforces.com/problemset/problem/1553/E

brute force

2100

An identity permutation of length n is an array [1, 2, 3, \dots, n].We performed the following operations to an identity permutation of length n:  firstly, we cyclically shifted it to the right by k positions, where k is unknown to you (the only thing you know is that 0 \le k \le n - 1). When an array is cyclically shifted to the right by k positions, the resulting array is formed by taking k last elements of the original array (without changing their relative order), and then appending n - k first elements to the right of them (without changing relative order of the first n - k elements as well). For example, if we cyclically shift the identity permutation of length 6 by 2 positions, we get the array [5, 6, 1, 2, 3, 4];  secondly, we performed the following operation at most m times: pick any two elements of the array and swap them. You are given the values of n and m, and the resulting array. Your task is to find all possible values of k in the cyclic shift operation.