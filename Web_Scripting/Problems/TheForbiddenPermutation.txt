The Forbidden Permutation                    

https://codeforces.com/problemset/problem/1778/B

greedy

1300

You are given a permutation p of length n, an array of m distinct integers a_1, a_2, \ldots, a_m (1 \le a_i \le n), and an integer d.Let \mathrm{pos}(x) be the index of x in the permutation p. The array a is not good if   \mathrm{pos}(a_{i}) < \mathrm{pos}(a_{i + 1}) \le \mathrm{pos}(a_{i}) + d for all 1 \le i < m. For example, with the permutation p = [4, 2, 1, 3, 6, 5] and d = 2:   a = [2, 3, 6] is a not good array.  a = [2, 6, 5] is good because \mathrm{pos}(a_1) = 2, \mathrm{pos}(a_2) = 5, so the condition \mathrm{pos}(a_2) \le \mathrm{pos}(a_1) + d is not satisfied.  a = [1, 6, 3] is good because \mathrm{pos}(a_2) = 5, \mathrm{pos}(a_3) = 4, so the condition \mathrm{pos}(a_2) < \mathrm{pos}(a_3) is not satisfied. In one move, you can swap two adjacent elements of the permutation p. What is the minimum number of moves needed such that the array a becomes good? It can be shown that there always exists a sequence of moves so that the array a becomes good.A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (n=3, but there is 4 in the array).