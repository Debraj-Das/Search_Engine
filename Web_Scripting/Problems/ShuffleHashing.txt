Shuffle Hashing                    

https://codeforces.com/problemset/problem/1278/A

brute force

1000

Polycarp has built his own web service. Being a modern web service it includes login feature. And that always implies password security problems.Polycarp decided to store the hash of the password, generated by the following algorithm:  take the password p, consisting of lowercase Latin letters, and shuffle the letters randomly in it to obtain p' (p' can still be equal to p);  generate two random strings, consisting of lowercase Latin letters, s_1 and s_2 (any of these strings can be empty);  the resulting hash h = s_1 + p' + s_2, where addition is string concatenation. For example, let the password p = "abacaba". Then p' can be equal to "aabcaab". Random strings s1 = "zyx" and s2 = "kjh". Then h = "zyxaabcaabkjh".Note that no letters could be deleted or added to p to obtain p', only the order could be changed.Now Polycarp asks you to help him to implement the password check module. Given the password p and the hash h, check that h can be the hash for the password p.Your program should answer t independent test cases.