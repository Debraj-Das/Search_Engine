Paprika and Permutation                    

https://codeforces.com/problemset/problem/1617/C

binary search

1300

Paprika loves permutations. She has an array a_1, a_2, \dots, a_n. She wants to make the array a permutation of integers 1 to n.In order to achieve this goal, she can perform operations on the array. In each operation she can choose two integers i (1 \le i \le n) and x (x > 0), then perform a_i := a_i \bmod x (that is, replace a_i by the remainder of a_i divided by x). In different operations, the chosen i and x can be different.Determine the minimum number of operations needed to make the array a permutation of integers 1 to n. If it is impossible, output -1.A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (n=3 but there is 4 in the array).