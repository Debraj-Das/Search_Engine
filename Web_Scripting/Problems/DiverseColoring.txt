Diverse Coloring                    

https://codeforces.com/problemset/problem/1781/G

constructive algorithms

3200

In this problem, we will be working with rooted binary trees. A tree is called a rooted binary tree if it has a fixed root and every vertex has at most two children.Let's assign a color — white or blue — to each vertex of the tree, and call this assignment a coloring of the tree. Let's call a coloring diverse if every vertex has a neighbor (a parent or a child) colored into an opposite color compared to this vertex. It can be shown that any tree with at least two vertices allows a diverse coloring.Let's define the disbalance of a coloring as the absolute value of the difference between the number of white vertices and the number of blue vertices.Now to the problem. Initially, the tree consists of a single vertex with the number 1 which is its root. Then, for each i from 2 to n, a new vertex i appears in the tree, and it becomes a child of vertex p_i. It is guaranteed that after each step the tree will keep being a binary tree rooted at vertex 1, that is, each vertex will have at most two children.After every new vertex is added, print the smallest value of disbalance over all possible diverse colorings of the current tree. Moreover, after adding the last vertex with the number n, also print a diverse coloring with the smallest possible disbalance as well.